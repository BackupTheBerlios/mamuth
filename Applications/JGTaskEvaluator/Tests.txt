# Testing osascript
# select /usr/bin/osascript and input:
tell application "Finder"
  activate
end tell

# Testing special handling of #!:
# Warning: the handling of #! is not fully compatible with the shell usage.
# Here the line might not contain any other whitespace, arguments or options.
# The line is removed from input. That allows to use it with #!/usr/bin/osascript

# Select any command
# Select Checkmark
# In input:
#!/bin/bash
echo hi
ls
echo there

# Should not work in shell scripts, because applescript does not understand #!
# But due to special semantics of #! this works (see outputOfProgramWithInput:)
# select anything,
# Ininput:
#!/usr/bin/osascript
tell application "Finder"
  activate
end tell


# Testing if JGTaskEvaluator responds to Apple Event "eval"
# select a shell 
# In Terminal.app enter, or from OpenMusic send with (send-eval input "JGTaskEvaluator")
osascript <<EOF
tell application "JGTaskEvaluator"
  eval "ls -l"
end tell
EOF


# Testing jgdo
./jgdo F-Script execute all <<\EOF
3+4.
8.
('a' stringByAppendingString:'b')
EOF

./jgdo F-Script execute <<\EOF
3+4
8
('a' stringByAppendingString:'b')
EOF

./jgdo F-Script execute lineByLine <<\EOF
3+4
8
('a' stringByAppendingString:'b')
EOF

./jgdo F-Script executeText all <<\EOF

3+4
8
('a' stringByAppendingString:'b')
EOF

./jgdo F-Script execute direct "3+4"

./jgdo JGTaskEvaluator execute all <<\EOF
#!/bin/bash
ls /tmp
EOF

mkfifo /tmp/jgdofifo.in
mkfifo /tmp/jgdofifo.out
./jgdofifo "jgdofifo" /tmp/jgdofifo.in /tmp/jgdofifo.out &
./jgdo "jgdofifo" execute direct "script"
# in other shell:
cat /tmp/jgdofifo.in
cat >>/tmp/jgfifo.out <<EOF
result
EOF

# this works nearly. it just does not store the INP value that should be read.
# why? (answer is not important for this test case)
EXECUTABLE=/tmp/jgdoscript.sh
cat >$EXECUTABLE <<EOF
#!/bin/bash
while test "x"=="x"; do
read INP;
date;
echo $INP;
echo "STOPWORD";
done
EOF
chmod u+x $EXECUTABLE
$EXECUTABLE
./jgdostdio "stopwordserver" "$EXECUTABLE" "STOPWORD" 
./jgdo "stopwordserver" execute 

# this demonstrates the combination of stdin and other parameters in jgrunwithfifo
sh jgrunwithfifo.sh cat `jgmktemp` /etc/hosts <<EOF
bla
blu
EOF

SERVER=`jgdoscript ...` does not work

# ok:
jgdoscript STOP <<\EOF &
#!/bin/sh
read LINE
echo "request 1"
echo "line: $LINE"
echo "STOP"
read LINE
echo "request 2"
echo "line: $LINE"
echo "STOP"
EOF

# line3 correctly results in error, because task is not running anymore.
jgdo /tmp/mktemp.* execute lineByLine
line1
line2
line3

# find all the jgdo* processes and kill them
ps -ax | grep jgdo | grep -v grep | gawk 'BEGIN {FS=" "}{system("kill "$1)}'

./jgae "CCL2" "misc" "eval" direct "(list 'a 'b)"
./jgom direct "(list 'a 'b)"


